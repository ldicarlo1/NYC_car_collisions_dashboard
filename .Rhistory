shiny::runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
data
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
data <- read.csv(paste0(dir,'Motor_Vehicle_Collisions_NYC_Crashes_processed.csv'))
dir = "/Users/lucadicarlo/Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/assignments/data/"
data <- read.csv(paste0(dir,'Motor_Vehicle_Collisions_NYC_Crashes_processed.csv'))
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp()
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
data
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
data[,"CONTRIBUTING.FACTOR.VEHICLE.1"]
fig <- plot_ly(data=data,
lat = ~LATITUDE,
lon = ~LONGITUDE,
marker = list(color = "red",size=2),
type = 'scattermapbox',mode="markers",
hovertext = data[,"CONTRIBUTING.FACTOR.VEHICLE.1"])
cause="Unspecified"
# filter by collision cause
data_cause <- subset(data,CONTRIBUTING.FACTOR.VEHICLE.1 == input$cause)
# filter by collision cause
data_cause <- subset(data,CONTRIBUTING.FACTOR.VEHICLE.1 == cause)
data_cause
fig <- plot_ly(data=data_cause,
lat = ~LATITUDE,
lon = ~LONGITUDE,
marker = list(color = "red",size=2),
type = 'scattermapbox',mode="markers",
hovertext = data[,"CONTRIBUTING.FACTOR.VEHICLE.1"])
fig <- fig %>%
layout(
mapbox = list(
style = 'carto-positron',
zoom = 9.2,
center = list(lon = -74.0060, lat = 40.7128)))
fig
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
subset(dat, format(as.Date(CRASH.DATETIME),"%Y")==2005)
subset(data, format(as.Date(CRASH.DATETIME),"%Y")==2005)
subset(data, format(as.Date(CRASH.DATETIME),"%Y")==20015)
subset(data, format(as.Date(CRASH.DATETIME),"%Y")==2015)
subset(data,NONE)
subset(data,NA)
subset(data,CRASH.DATETIME)
subset(data,CRASH.DATETIME=="")
subset(data,CRASH.DATETIME==NONE)
subset(data,CRASH.DATETIME==NA)
subset(data,CRASH.DATETIME==)
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp()
runApp()
subset(data,CRASH.DATETIME==)
runApp()
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
min(data$CRASH.DATETIME)
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp()
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
subset(data,CRASH.DATE>"2020-1-1")
subset(data,CRASH.DATE>as.Date("2020-1-1"))
subset(data,CRASH.DATE>as.Date("2020-1-1",format="%Y-%m-%d"))
subset(data,CRASH.DATETIME>as.Date("2020-1-1",format="%Y-%m-%d"))
subset(data,CRASH.DATETIME>as.Date("2020-1-1"))
subset(data,CRASH.DATETIME<"2020-1-1")
subset(data,CRASH.DATETIME<as.Date("2020-1-1"))
subset(data,CRASH.DATETIME<as.Date("2020-1-1") & CRASH.DATETIME>as.Date("2019-12-1"))
subset(data,CRASH.DATETIME<as.Date("2020-1-1") & CRASH.DATETIME>as.Date("2019-12-25"))
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
subset(data,CRASH.DATETIME<as.Date("2020-1-1") & CRASH.DATETIME>as.Date("2019-12-25"))
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
data_cause
data_cause$CRASH.DATETIME
data_cause$CRASH.DATETIME[1]
data$CRASH.DATETIME
# load dataset
dir = "/Users/lucadicarlo/Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/assignments/data/"
data <- read.csv(paste0(dir,'Motor_Vehicle_Collisions_NYC_Crashes.csv'))
print(colnames(data))
library(dplyr)
# fill all missing values with NA's
data[data==""]= NA
#data[data==NA]= "NA"
# convert crash date to datetime
data$CRASH.DATETIME <- as.Date(as.POSIXct(paste(data$CRASH.DATE, data$CRASH.TIME), format="%m/%d/%Y %H:%M"))
# list of variables of interest
new_cols <- c("CRASH.DATETIME","LATITUDE","LONGITUDE","NUMBER.OF.PERSONS.INJURED","NUMBER.OF.PERSONS.KILLED","CONTRIBUTING.FACTOR.VEHICLE.1","CONTRIBUTING.FACTOR.VEHICLE.2")
# create new dataset
data_new <- select(data,new_cols)
# only interested in complete years (2015-2019)
data_new <- data_new[data_new$CRASH.DATETIME > as.Date('2014-12-31',format='%Y-%m-%d %H'), ]
data_new <- data_new[data_new$CRASH.DATETIME < as.Date('2021-1-1',format='%Y-%m-%d %H'), ]
# print new dataset
print(head(data_new),10)
data_new$CRASH.DATETIME
as.Date(as.POSIXct(paste(data$CRASH.DATE, data$CRASH.TIME), format="%m/%d/%Y %H:%M"))
data$CRASH.TIME
data$CRASH.TIME
data
data_new$CRASH.DATETIME
data$CRASH.DATETIME <- as.Date(as.POSIXct(paste(data$CRASH.DATE, data$CRASH.TIME), format="%m/%d/%Y %H:%M"))
data$CRASH.DATETIME
as.Date(as.POSIXct(paste(data$CRASH.DATE, data$CRASH.TIME), format="%m/%d/%Y %H:%M"))
as.Date(as.POSIXct(paste(data$CRASH.DATE[1], data$CRASH.TIME[1]), format="%m/%d/%Y %H:%M"))
as.Date(as.POSIXct(paste(data$CRASH.DATE[1], data$CRASH.TIME[1]), format="%m/%d/%Y %H:%M"))
paste(data$CRASH.DATE[1], data$CRASH.TIME[1])
paste(data$CRASH.DATE[1], data$CRASH.TIME[1])as.Date(as.POSIXct(paste(data$CRASH.DATE[1], data$CRASH.TIME[1])),format="%m/%d/%Y %H:%M")
as.Date(as.POSIXct(paste(data$CRASH.DATE[1], data$CRASH.TIME[1])),format="%m/%d/%Y %H:%M")
as.Date(as.POSIXct(paste(data$CRASH.DATE[1], data$CRASH.TIME[1]),format="%m/%d/%Y %H:%M"))
as.Date(as.POSIXct(paste(data$CRASH.DATE[1], data$CRASH.TIME[1]),format="%m/%d/%Y %H:%M"))
as.Date(as.POSIXct(paste(data$CRASH.DATE[1], data$CRASH.TIME[1]),format="%m/%d/%Y %H:%M"),format="%Y%m%d %H%m")
as.Date(as.POSIXct(data$CRASH.DATE[1]),format="%m/%d/%Y %H:%M"))
as.Date(as.POSIXct(data$CRASH.DATE[1])),format="%m/%d/%Y %H:%M")
as.Date(as.POSIXct(data$CRASH.DATE[1]),format="%m/%d/%Y %H:%M")
as.Date(as.POSIXct(data$CRASH.DATE[1]),format="%m/%d/%Y")
data$CRASH.TIME
as.POSIXct(paste(data$CRASH.DATE[1], data$CRASH.TIME[1])
)
as.POSIXct(paste(data$CRASH.DATE[1], data$CRASH.TIME[1]))
as.POSIXct(paste(data$CRASH.DATE[1], data$CRASH.TIME[1]),format = "%m/%d/%Y %H:%M")
as.Date(as.POSIXct(paste(data$CRASH.DATE[1], data$CRASH.TIME[1]),format = "%m/%d/%Y %H:%M")
)
as.Date(as.POSIXct(paste(data$CRASH.DATE[1], data$CRASH.TIME[1]),format = "%m/%d/%Y %H:%M"))
as.POSIXct(paste(data$CRASH.DATE[1], data$CRASH.TIME[1]),format = "%m/%d/%Y %H:%M")
as.POSIXct(paste(data$CRASH.DATE[1], data$CRASH.TIME[1]),format = "%m/%d/%Y %H:%M") > as.Date("20200101",format="%Y%m%d")
as.POSIXct(paste(data$CRASH.DATE[1], data$CRASH.TIME[1]),format = "%m/%d/%Y %H:%M") > as.POSIXct("20200101",format="%Y%m%d")
as.POSIXct(paste(data$CRASH.DATE[1], data$CRASH.TIME[1]),format = "%m/%d/%Y %H:%M") < as.POSIXct("20200101",format="%Y%m%d")
# convert crash date to datetime
data$CRASH.DATE <- as.POSIXct(paste(data$CRASH.DATE, data$CRASH.TIME), format="%m/%d/%Y %H:%M"))
# convert crash date to datetime
data$CRASH.DATE <- as.POSIXct(paste(data$CRASH.DATE, data$CRASH.TIME), format="%m/%d/%Y %H:%M")))
# convert crash date to datetime
data$CRASH.DATE <- as.POSIXct(paste(data$CRASH.DATE, data$CRASH.TIME), format="%m/%d/%Y %H:%M"))
# convert crash date to datetime
data$CRASH.DATE <- as.POSIXct(paste(data$CRASH.DATE, data$CRASH.TIME), format="%m/%d/%Y %H:%M")
# convert crash date to datetime
data$CRASH.DATETIME <- as.POSIXct(paste(data$CRASH.DATE, data$CRASH.TIME), format="%m/%d/%Y %H:%M")
data$CRASH.DATETIME
as.POSIXct(paste(data$CRASH.DATE, data$CRASH.TIME), format="%m/%d/%Y %H:%M")
# load dataset
dir = "/Users/lucadicarlo/Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/assignments/data/"
data <- read.csv(paste0(dir,'Motor_Vehicle_Collisions_NYC_Crashes.csv'))
# load dataset
dir = "/Users/lucadicarlo/Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/assignments/data/"
data <- read.csv(paste0(dir,'Motor_Vehicle_Collisions_NYC_Crashes.csv'))
print(colnames(data))
library(dplyr)
# fill all missing values with NA's
data[data==""]= NA
as.POSIXct(data$CRASH.DATE, format="%m/%d/%Y")
as.Date(data$CRASH.DATE, format="%m/%d/%Y")
data$CRASH.TIME
substr(data$CRASH.TIME,start = 1, stop =2)
sub("\\:.*", "", data$CRASH.TIME)
as.integer(sub("\\:.*", "", data$CRASH.TIME))
sub("\\:.*", "", data$CRASH.TIME)
# load dataset
dir = "/Users/lucadicarlo/Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/assignments/data/"
data <- read.csv(paste0(dir,'Motor_Vehicle_Collisions_NYC_Crashes.csv'))
print(colnames(data))
library(dplyr)
# fill all missing values with NA's
data[data==""]= NA
#data[data==NA]= "NA"
# convert crash date to date object
data$CRASH.DATE <- as.Date(data$CRASH.DATE, format="%m/%d/%Y")
# convert time to integer object (0-23) for hour
data$CRASH.TIME <- as.integer(sub("\\:.*", "", data$CRASH.TIME))
# list of variables of interest
new_cols <- c("CRASH.DATE","CRASH.TIME","LATITUDE","LONGITUDE","NUMBER.OF.PERSONS.INJURED","NUMBER.OF.PERSONS.KILLED","CONTRIBUTING.FACTOR.VEHICLE.1","CONTRIBUTING.FACTOR.VEHICLE.2")
# create new dataset
data_new <- select(data,new_cols)
# only interested in complete years (2015-2019)
data_new <- data_new[data_new$CRASH.DATETIME > as.POSIXct(as.Date('2014-12-31',format='%Y-%m-%d')), ]
data_new <- data_new[data_new$CRASH.DATETIME < as.POSIXct(as.Date('2021-1-1',format='%Y-%m-%d')), ]
# print new dataset
print(head(data_new),10)
# remove non-nyc locations (errors)
data_new_nyc <- data_new[(data_new$LATITUDE>=40.48) & (data_new$LATITUDE<=41),]
data_new_nyc <- data_new_nyc[(data_new_nyc$LONGITUDE>=-74.27) & (data_new_nyc$LONGITUDE<=-73.65),]
# remove rows with missing lat/lon points
data_new_nyc = data_new_nyc[!is.na(data_new_nyc$CRASH.DATETIME),]
diff <- length(data_new$LATITUDE) - length(data_new_nyc$LATITUDE)
print(paste0("The number of values excluded: ", diff))
# Remove CONTRIBUTING.FACTOR.VEHICLE.2
data_new_nyc <- subset(data_new_nyc,select=-CONTRIBUTING.FACTOR.VEHICLE.2)
# Combine Illnes with Illness
data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1 <- replace(data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1,data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1=="Illnes","Illness")
# Combine Cell Phone factors together
data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1 <- replace(data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1,data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1=="Cell Phone (hand-held)","Cell Phone")
data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1 <- replace(data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1,data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1=="Cell Phone (hand-Held)","Cell Phone")
data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1 <- replace(data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1,data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1=="Cell Phone (hands-free)" ,"Cell Phone")
# Remove column "1" and "80"
data_new_nyc=data_new_nyc[data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1!="80",]
data_new_nyc=data_new_nyc[data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1!="1",]
# Remove NA values
data_new_nyc <- subset(data_new_nyc,(!is.na(data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1)))
# save data as new CSV file
write.csv(data_new_nyc, paste0(dir,"Motor_Vehicle_Collisions_NYC_Crashes_processed.csv"))
shiny::runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
data
dir = "/Users/lucadicarlo/Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/assignments/data/"
data <- read.csv(paste0(dir,'Motor_Vehicle_Collisions_NYC_Crashes_processed.csv'))
data$X
data$CRASH.DATE
data
data_new_nyc
# load dataset
dir = "/Users/lucadicarlo/Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/assignments/data/"
data <- read.csv(paste0(dir,'Motor_Vehicle_Collisions_NYC_Crashes.csv'))
print(colnames(data))
library(dplyr)
# fill all missing values with NA's
data[data==""]= NA
#data[data==NA]= "NA"
# convert crash date to date object
data$CRASH.DATE <- as.Date(data$CRASH.DATE, format="%m/%d/%Y")
# convert time to integer object (0-23) for hour
data$CRASH.TIME <- as.integer(sub("\\:.*", "", data$CRASH.TIME))
# list of variables of interest
new_cols <- c("CRASH.DATE","CRASH.TIME","LATITUDE","LONGITUDE","NUMBER.OF.PERSONS.INJURED","NUMBER.OF.PERSONS.KILLED","CONTRIBUTING.FACTOR.VEHICLE.1","CONTRIBUTING.FACTOR.VEHICLE.2")
# create new dataset
data_new <- select(data,new_cols)
# only interested in complete years (2015-2019)
data_new <- data_new[data_new$CRASH.DATETIME > as.POSIXct(as.Date('2014-12-31',format='%Y-%m-%d')), ]
data_new <- data_new[data_new$CRASH.DATETIME < as.POSIXct(as.Date('2021-1-1',format='%Y-%m-%d')), ]
# print new dataset
print(head(data_new),10)
library(dplyr)
# fill all missing values with NA's
data[data==""]= NA
# load dataset
dir = "/Users/lucadicarlo/Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/assignments/data/"
data <- read.csv(paste0(dir,'Motor_Vehicle_Collisions_NYC_Crashes.csv'))
# fill all missing values with NA's
data[data==""]= NA
print(colnames(data))
library(dplyr)
#data[data==NA]= "NA"
# convert crash date to date object
data$CRASH.DATE <- as.Date(data$CRASH.DATE, format="%m/%d/%Y")
# convert time to integer object (0-23) for hour
data$CRASH.TIME <- as.integer(sub("\\:.*", "", data$CRASH.TIME))
# list of variables of interest
new_cols <- c("CRASH.DATE","CRASH.TIME","LATITUDE","LONGITUDE","NUMBER.OF.PERSONS.INJURED","NUMBER.OF.PERSONS.KILLED","CONTRIBUTING.FACTOR.VEHICLE.1","CONTRIBUTING.FACTOR.VEHICLE.2")
# create new dataset
data_new <- select(data,new_cols)
# only interested in complete years (2015-2019)
data_new <- data_new[data_new$CRASH.DATETIME > as.Date('2014-12-31',format='%Y-%m-%d'), ]
data_new <- data_new[data_new$CRASH.DATETIME < as.Date('2021-1-1',format='%Y-%m-%d'), ]
# print new dataset
print(head(data_new),10)
data_new
data
# create new dataset
data_new <- select(data,new_cols)
data_new[data_new$CRASH.DATETIME > as.Date('2014-12-31',format='%Y-%m-%d'), ]
data_new[data_new$CRASH.DATE > as.Date('2014-12-31',format='%Y-%m-%d'), ]
library(dplyr)
#data[data==NA]= "NA"
# convert crash date to date object
data$CRASH.DATE <- as.Date(data$CRASH.DATE, format="%m/%d/%Y")
# convert time to integer object (0-23) for hour
data$CRASH.TIME <- as.integer(sub("\\:.*", "", data$CRASH.TIME))
# list of variables of interest
new_cols <- c("CRASH.DATE","CRASH.TIME","LATITUDE","LONGITUDE","NUMBER.OF.PERSONS.INJURED","NUMBER.OF.PERSONS.KILLED","CONTRIBUTING.FACTOR.VEHICLE.1","CONTRIBUTING.FACTOR.VEHICLE.2")
# create new dataset
data_new <- select(data,new_cols)
# only interested in complete years (2015-2019)
data_new <- data_new[data_new$CRASH.DATE > as.Date('2014-12-31',format='%Y-%m-%d'), ]
data_new <- data_new[data_new$CRASH.DATE < as.Date('2021-1-1',format='%Y-%m-%d'), ]
# print new dataset
print(head(data_new),10)
data_new
# remove non-nyc locations (errors)
data_new_nyc <- data_new[(data_new$LATITUDE>=40.48) & (data_new$LATITUDE<=41),]
data_new_nyc <- data_new_nyc[(data_new_nyc$LONGITUDE>=-74.27) & (data_new_nyc$LONGITUDE<=-73.65),]
# remove rows with missing lat/lon points
data_new_nyc = data_new_nyc[!is.na(data_new_nyc$CRASH.DATETIME),]
diff <- length(data_new$LATITUDE) - length(data_new_nyc$LATITUDE)
print(paste0("The number of values excluded: ", diff))
# Remove CONTRIBUTING.FACTOR.VEHICLE.2
data_new_nyc <- subset(data_new_nyc,select=-CONTRIBUTING.FACTOR.VEHICLE.2)
# Combine Illnes with Illness
data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1 <- replace(data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1,data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1=="Illnes","Illness")
# Combine Cell Phone factors together
data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1 <- replace(data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1,data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1=="Cell Phone (hand-held)","Cell Phone")
data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1 <- replace(data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1,data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1=="Cell Phone (hand-Held)","Cell Phone")
data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1 <- replace(data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1,data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1=="Cell Phone (hands-free)" ,"Cell Phone")
# Remove column "1" and "80"
data_new_nyc=data_new_nyc[data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1!="80",]
data_new_nyc=data_new_nyc[data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1!="1",]
# Remove NA values
data_new_nyc <- subset(data_new_nyc,(!is.na(data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1)))
data_new_nyc
data_new
# remove non-nyc locations (errors)
data_new_nyc <- data_new[(data_new$LATITUDE>=40.48) & (data_new$LATITUDE<=41),]
data_new_nyc <- data_new_nyc[(data_new_nyc$LONGITUDE>=-74.27) & (data_new_nyc$LONGITUDE<=-73.65),]
# remove rows with missing lat/lon points
data_new_nyc = data_new_nyc[!is.na(data_new_nyc$CRASH.DATETIME),]
diff <- length(data_new$LATITUDE) - length(data_new_nyc$LATITUDE)
print(paste0("The number of values excluded: ", diff))
# remove non-nyc locations (errors)
data_new_nyc <- data_new[(data_new$LATITUDE>=40.48) & (data_new$LATITUDE<=41),]
data_new_nyc <- data_new_nyc[(data_new_nyc$LONGITUDE>=-74.27) & (data_new_nyc$LONGITUDE<=-73.65),]
# remove rows with missing lat/lon points
data_new_nyc = data_new_nyc[!is.na(data_new_nyc$CRASH.DATE),]
diff <- length(data_new$LATITUDE) - length(data_new_nyc$LATITUDE)
print(paste0("The number of values excluded: ", diff))
# Remove CONTRIBUTING.FACTOR.VEHICLE.2
data_new_nyc <- subset(data_new_nyc,select=-CONTRIBUTING.FACTOR.VEHICLE.2)
# Combine Illnes with Illness
data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1 <- replace(data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1,data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1=="Illnes","Illness")
# Combine Cell Phone factors together
data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1 <- replace(data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1,data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1=="Cell Phone (hand-held)","Cell Phone")
data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1 <- replace(data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1,data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1=="Cell Phone (hand-Held)","Cell Phone")
data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1 <- replace(data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1,data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1=="Cell Phone (hands-free)" ,"Cell Phone")
# Remove column "1" and "80"
data_new_nyc=data_new_nyc[data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1!="80",]
data_new_nyc=data_new_nyc[data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1!="1",]
# Remove NA values
data_new_nyc <- subset(data_new_nyc,(!is.na(data_new_nyc$CONTRIBUTING.FACTOR.VEHICLE.1)))
data_new_nyc
# save data as new CSV file
write.csv(data_new_nyc, paste0(dir,"Motor_Vehicle_Collisions_NYC_Crashes_processed.csv"))
shiny::runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
library( shinyWidgets )
install.packages("shinyWidgets")
library( shinyWidgets )
install.packes("shinyWidgets")
install.packages("shinyWidgets")
shiny::runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp()
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
data
data$CRASH.TIME
count(data$CRASH.TIME)
counts(data$CRASH.TIME)
table(data$CRASH.TIME)
plot(table(data$CRASH.TIME))
library(ggplot2)
ggplot(as.data.frame(table))
table(data$CRASH.TIME)
as.data.frame(table(data$CRASH.TIME))
as.data.frame(table(data$CRASH.TIME))
seq()
seq(1:4)
seq(1:24)
seq(0:24)
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
barplot(table(factor(data$CRASH.TIME, levels=1:24)))
table(factor(data$CRASH.TIME, levels=1:24))
table(factor(data$CRASH.TIME, levels=0:23))
as.data.frame(table(factor(data$CRASH.TIME, levels=0:23)))
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
as.data.frame(table(factor(data$CRASH.TIME, levels=0:23)),col.names=c("Hour","Count of Collisions"))
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
x<-as.data.frame(table(factor(data$CRASH.TIME, levels=0:23)))
colnames(x) <- c("Hour","Count of Collisions")
x
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
time_vals <- as.data.frame(table(factor(data$CRASH.TIME, levels=0:23)))
colnames(time_vals) <- c("Hour","Count of Collisions")
fig_bar <- plot_ly(data=time_vals,x=~"Hour",y=~"Count of Collisions",type="bar")
fig_bar
time_vals$Hour
time_vals$`Count of Collisions`
time_vals$Hour
time_vals$Hour
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
table(factor(time_vals$CRASH.TIME, levels=0:23))
table(factor(time_vals$CRASH.TIME, levels=0:23))[1]
table(factor(time_vals$CRASH.TIME, levels=0:23))[,1]
table(factor(time_vals$CRASH.TIME, levels=0:23))[1,]
table(factor(time_vals$CRASH.TIME, levels=0:23))[1]
table(factor(time_vals$CRASH.TIME, levels=0:23))[:,1]
table(factor(time_vals$CRASH.TIME, levels=0:23))[,1]
table(factor(time_vals$CRASH.TIME, levels=0:23))[2]
table(factor(time_vals$CRASH.TIME, levels=0:23))
table(factor(time_vals$CRASH.TIME, levels=0:23))[,]
table(factor(time_vals$CRASH.TIME, levels=0:23))[1,]
table(factor(time_vals$CRASH.TIME, levels=0:23))[,1]
table(factor(time_vals$CRASH.TIME, levels=0:23))[0]
table(factor(time_vals$CRASH.TIME, levels=0:23))[1]
table(factor(time_vals$CRASH.TIME, levels=0:23))[1][1]
table(factor(time_vals$CRASH.TIME, levels=0:23))[1,1][]
table(factor(time_vals$CRASH.TIME, levels=0:23))[1,1]
time_vals$`Count of Collisions`
time_vals <- as.data.frame(table(factor(data$CRASH.TIME, levels=0:23)))
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp()
shiny::runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
as.POSIXct("2021-1-1 0:00")
as.POSIXct("2021-1-1 0:00")
now = as.POSIXct("2021-1-1 0:00")
seq(now, length.out = 24, by = "hours")
seq(now, length.out = 24, by = "hours", format=)
seq(now, length.out = 24, by = "hours", format="%M")
seq(now, length.out = 24, by = "hours")
now
hour(now)
type = 'date',
tickformat = "%d %B (%a)<br>%Y"
library(lubridate)
hour(now)
seq(now, length.out = 24, by = "hours")
times - seq(now, length.out = 24, by = "hours")
times = seq(now, length.out = 24, by = "hours")
times
strptime(times,format="%M)"
strptime(times,format="%M)
strptime(times,format="%M")
now
times
strptime(times,format="%M:H")
strptime(times,format="%M:%H")
strptime(times,format="%Y-%m-%d")
strptime(times,format="%h")
strptime(times,format="%H")
strptime(times,format="%m")
strptime(times,format="%M")
strptime(times,format="%h")
strptime(times,format="%d")
format(times)
format(times,"%Y")
format(times,"%H")
times <- c("0:00","1:00","2:00","3:00","4:00","5:00","6:00","7:00","8:00","9:00","10:00","11:00","12:00","13:00","14:00",)
times <- list("0:00","1:00","2:00","3:00","4:00","5:00","6:00","7:00","8:00","9:00","10:00","11:00","12:00","13:00","14:00","15:00","16:00",
"17:00","18:00","19:00","20:00","21:00","22:00","23:00")
times <- c("0:00","1:00","2:00","3:00","4:00","5:00","6:00","7:00","8:00","9:00","10:00","11:00","12:00","13:00","14:00",)
times <- list("0:00","1:00","2:00","3:00","4:00","5:00","6:00","7:00","8:00","9:00","10:00","11:00","12:00","13:00","14:00","15:00","16:00",
"17:00","18:00","19:00","20:00","21:00","22:00","23:00")
times
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
c(1:24)
c(0:24)
c(0:23)
runApp('Documents/OxfordBrookes/classes/Semester2/DALT7016-Data Visualizations/practicals/practical1/nyc_car_collisions')
